// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: user.proto

package user

import (
	"context"

	"im/application/user/rpc/service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	FindByEmailRequest     = service.FindByEmailRequest
	FindByEmailResponse    = service.FindByEmailResponse
	FindByIdRequest        = service.FindByIdRequest
	FindByIdResponse       = service.FindByIdResponse
	ModifyEmailRequest     = service.ModifyEmailRequest
	ModifyEmailResponse    = service.ModifyEmailResponse
	ModifyMobileRequest    = service.ModifyMobileRequest
	ModifyMobileResponse   = service.ModifyMobileResponse
	ModifyPasswordRequest  = service.ModifyPasswordRequest
	ModifyPasswordResponse = service.ModifyPasswordResponse
	RegisterRequest        = service.RegisterRequest
	RegisterResponse       = service.RegisterResponse
	UpdateUserInfoResponse = service.UpdateUserInfoResponse
	UpdateUserInfoResquest = service.UpdateUserInfoResquest

	User interface {
		Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error)
		FindByEmail(ctx context.Context, in *FindByEmailRequest, opts ...grpc.CallOption) (*FindByEmailResponse, error)
		FindById(ctx context.Context, in *FindByIdRequest, opts ...grpc.CallOption) (*FindByIdResponse, error)
		UpdateUserInfo(ctx context.Context, in *UpdateUserInfoResquest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error)
		ModifyEmail(ctx context.Context, in *ModifyEmailRequest, opts ...grpc.CallOption) (*ModifyEmailResponse, error)
		ModifyMobile(ctx context.Context, in *ModifyMobileRequest, opts ...grpc.CallOption) (*ModifyMobileResponse, error)
		ModifyPassword(ctx context.Context, in *ModifyPasswordRequest, opts ...grpc.CallOption) (*ModifyPasswordResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) Register(ctx context.Context, in *RegisterRequest, opts ...grpc.CallOption) (*RegisterResponse, error) {
	client := service.NewUserClient(m.cli.Conn())
	return client.Register(ctx, in, opts...)
}

func (m *defaultUser) FindByEmail(ctx context.Context, in *FindByEmailRequest, opts ...grpc.CallOption) (*FindByEmailResponse, error) {
	client := service.NewUserClient(m.cli.Conn())
	return client.FindByEmail(ctx, in, opts...)
}

func (m *defaultUser) FindById(ctx context.Context, in *FindByIdRequest, opts ...grpc.CallOption) (*FindByIdResponse, error) {
	client := service.NewUserClient(m.cli.Conn())
	return client.FindById(ctx, in, opts...)
}

func (m *defaultUser) UpdateUserInfo(ctx context.Context, in *UpdateUserInfoResquest, opts ...grpc.CallOption) (*UpdateUserInfoResponse, error) {
	client := service.NewUserClient(m.cli.Conn())
	return client.UpdateUserInfo(ctx, in, opts...)
}

func (m *defaultUser) ModifyEmail(ctx context.Context, in *ModifyEmailRequest, opts ...grpc.CallOption) (*ModifyEmailResponse, error) {
	client := service.NewUserClient(m.cli.Conn())
	return client.ModifyEmail(ctx, in, opts...)
}

func (m *defaultUser) ModifyMobile(ctx context.Context, in *ModifyMobileRequest, opts ...grpc.CallOption) (*ModifyMobileResponse, error) {
	client := service.NewUserClient(m.cli.Conn())
	return client.ModifyMobile(ctx, in, opts...)
}

func (m *defaultUser) ModifyPassword(ctx context.Context, in *ModifyPasswordRequest, opts ...grpc.CallOption) (*ModifyPasswordResponse, error) {
	client := service.NewUserClient(m.cli.Conn())
	return client.ModifyPassword(ctx, in, opts...)
}
