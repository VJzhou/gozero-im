// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package handler

import (
	"net/http"

	login "im/application/applet/internal/handler/login"
	register "im/application/applet/internal/handler/register"
	setting "im/application/applet/internal/handler/setting"
	user "im/application/applet/internal/handler/user"
	"im/application/applet/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: login.LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: register.RegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/send-code",
				Handler: register.SendCodeHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/setting",
				Handler: setting.UserSettingHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithSignature(serverCtx.Config.Signature),
		rest.WithPrefix("/v1/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/change-email",
				Handler: user.ModifyEmailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/change-mobile",
				Handler: user.ModifyMobileHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/change-password",
				Handler: user.ModifyPasswordHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/info",
				Handler: user.UserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/info",
				Handler: user.ModifyUserInfoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithSignature(serverCtx.Config.Signature),
		rest.WithPrefix("/v1/user"),
	)
}
