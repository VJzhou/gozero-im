// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2

package types

type LoginRequest struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type LoginResponse struct {
	Token Token `json:"token"`
}

type ModifyEmailRequest struct {
	Password string `json:"password"`
	Email    string `json:"email"`
	Code     string `json:"code"`
}

type ModifyEmailResponse struct {
}

type ModifyMobileRequest struct {
	Password string `json:"password"`
	Mobile   string `json:"mobile"`
	Code     string `json:"code"`
}

type ModifyMobileResponse struct {
}

type ModifyPasswordRequest struct {
	Password    string `json:"password"`
	NewPassword string `json:"new_password"`
}

type ModifyPasswordResponse struct {
}

type ModifyUserInfoRequest struct {
	Nickname string `json:"nickname"`
	Avatar   string `json:"avatar"`
	Gender   int    `json:"gender"`
	Motto    string `json:"motto"`
	Birthday string `json:"birthday"`
}

type ModifyUserInfoResponse struct {
}

type RegisterRequest struct {
	Email    string `json:"email"`
	Code     string `json:"code"`
	Nickname string `json:"nickname"`
	Password string `json:"password"`
}

type RegisterResponse struct {
	UserId int64 `json:"user_id"`
	Token  Token `json:"token"`
}

type SendCodeRequest struct {
	Email string `json:"email"`
}

type SendCodeResponse struct {
	Code string `json:"code,omitempty"`
}

type Token struct {
	AccessToken  string `json:"access_token"`
	AccessExpire int64  `json:"access_expire"`
}

type UserInfo struct {
	UserId   int64  `json:"user_id"`
	Nickname string `json:"nickname"`
	Avatar   string `json:"avatar"`
	Gender   int    `json:"gender"`
	Motto    string `json:"motto"`
	Email    string `json:"email"`
	Birthday string `json:"birthday"`
	Mobile   string `json:"mobile"`
}

type UserInfoResponse struct {
	UserInfo
}

type UserSetting struct {
	KeyboardEventNotify string `json:"keyboard_event_notify"`
	NotifyCueTone       string `json:"notify_cue_tone"`
	ThemeBagImg         string `json:"theme_bag_img"`
	ThemeColor          string `json:"theme_color"`
	ThemeMode           string `json:"theme_mode"`
}

type UserSettingResponse struct {
	UserInfo    UserInfo    `json:"user_info"`
	UserSetting UserSetting `json:"user_setting"`
}
