// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: email.proto

package email

import (
	"context"

	"im/application/email/rpc/service"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckEmailCodeRequest   = service.CheckEmailCodeRequest
	CheckEmailCodeResponse  = service.CheckEmailCodeResponse
	DeleteEmailCodeRequest  = service.DeleteEmailCodeRequest
	DeleteEmailCodeResponse = service.DeleteEmailCodeResponse
	SendEmailRequest        = service.SendEmailRequest
	SendEmailResponse       = service.SendEmailResponse

	Email interface {
		SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailResponse, error)
		CheckEmail(ctx context.Context, in *CheckEmailCodeRequest, opts ...grpc.CallOption) (*CheckEmailCodeResponse, error)
		DeleteEmailCode(ctx context.Context, in *DeleteEmailCodeRequest, opts ...grpc.CallOption) (*DeleteEmailCodeResponse, error)
	}

	defaultEmail struct {
		cli zrpc.Client
	}
)

func NewEmail(cli zrpc.Client) Email {
	return &defaultEmail{
		cli: cli,
	}
}

func (m *defaultEmail) SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*SendEmailResponse, error) {
	client := service.NewEmailClient(m.cli.Conn())
	return client.SendEmail(ctx, in, opts...)
}

func (m *defaultEmail) CheckEmail(ctx context.Context, in *CheckEmailCodeRequest, opts ...grpc.CallOption) (*CheckEmailCodeResponse, error) {
	client := service.NewEmailClient(m.cli.Conn())
	return client.CheckEmail(ctx, in, opts...)
}

func (m *defaultEmail) DeleteEmailCode(ctx context.Context, in *DeleteEmailCodeRequest, opts ...grpc.CallOption) (*DeleteEmailCodeResponse, error) {
	client := service.NewEmailClient(m.cli.Conn())
	return client.DeleteEmailCode(ctx, in, opts...)
}
